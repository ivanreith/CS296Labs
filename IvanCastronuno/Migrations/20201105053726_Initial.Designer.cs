// <auto-generated />
using IvanCastronuno.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IvanCastronuno.Migrations
{
    [DbContext(typeof(StoryContext))]
    [Migration("20201105053726_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IvanCastronuno.Models.StoriesModelForm", b =>
                {
                    b.Property<int>("StoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StoryText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoryTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoryTopic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StoryID");

                    b.HasIndex("UserId");

                    b.ToTable("Stories");

                    b.HasData(
                        new
                        {
                            StoryID = 1,
                            StoryText = "To do a travel wearing armor isn't fun",
                            StoryTitle = "Viaje",
                            StoryTopic = "Travel",
                            UserId = "1"
                        },
                        new
                        {
                            StoryID = 2,
                            StoryText = "To redo your costume three times for not follow the instructions is a common noob mistake.",
                            StoryTitle = "Crafting",
                            StoryTopic = "Use instructions",
                            UserId = "6"
                        },
                        new
                        {
                            StoryID = 3,
                            StoryText = "When on a recreation , if u have food , you'll find friends",
                            StoryTitle = "Food",
                            StoryTopic = "Find friends",
                            UserId = "7"
                        });
                });

            modelBuilder.Entity("IvanCastronuno.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            UserName = "Johnny"
                        },
                        new
                        {
                            UserId = "2",
                            UserName = "Tommy"
                        },
                        new
                        {
                            UserId = "3",
                            UserName = "Danny"
                        },
                        new
                        {
                            UserId = "4",
                            UserName = "Mannly"
                        },
                        new
                        {
                            UserId = "5",
                            UserName = "Conny"
                        },
                        new
                        {
                            UserId = "6",
                            UserName = "Sunny"
                        },
                        new
                        {
                            UserId = "7",
                            UserName = "Diandra"
                        });
                });

            modelBuilder.Entity("IvanCastronuno.Models.StoriesModelForm", b =>
                {
                    b.HasOne("IvanCastronuno.Models.User", "Poster")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
